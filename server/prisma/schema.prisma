generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  orders    Order[]  @relation("UserOrders")
}

model Product {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  stock       Int
  category    ProductCategory
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  Racket      Racket[]
  Shoe        Shoe[]
  OrderItem   OrderItem[]
}

enum ProductCategory {
  RACKET
  SHOE
}

model Racket {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  brand     String
  headSize  Float
  weight    Float
  pattern   String // strings pattern
  type      String
}

model Shoe {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  product   Product    @relation(fields: [productId], references: [id])
  productId String     @db.ObjectId
  brand     String
  size      Int
  gender    ShoeGender
  material  String
  color     String
}

enum ShoeGender {
  MALE
  FEMALE
  UNISEX
}

model Order {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  user        User        @relation("UserOrders", fields: [userId], references: [id])
  userId      String      @db.ObjectId
  createdAt   DateTime    @default(now())
  items       OrderItem[]
  totalAmount Float
}

model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  quantity  Int
  price     Float
}
