generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid()) @map("_id")
  email     String   @unique
  password  String
  name      String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  orders    Order[]
}

model Product {
  id        String          @id @default(cuid()) @map("_id")
  name      String
  image     String
  image2    String
  brand     String
  price     Float
  stock     Int
  category  ProductCategory
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  racket    Racket?
  shoe      Shoe?
  OrderItem OrderItem[]
}

enum ProductCategory {
  RACKET
  SHOE
}

model Racket {
  id        String  @id @default(cuid()) @map("_id")
  product   Product @relation(fields: [productId], references: [id]) // No fields or references here
  productId String  @unique
  headSize  String
  pattern   String // string pattern
  weight    String
  type      String
}

model Shoe {
  id        String  @id @default(cuid()) @map("_id")
  product   Product @relation(fields: [productId], references: [id]) // No fields or references here
  productId String  @unique
  size      Float
  color     String
}

enum ShoeGender {
  MALE
  FEMALE
  UNISEX
}

model Order {
  id          String      @id @default(cuid()) @map("_id")
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime    @default(now())
  items       OrderItem[]
  totalAmount Float
}

model OrderItem {
  id        String  @id @default(cuid()) @map("_id")
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Float
}
